# Generated by Django 4.2.3 on 2024-03-08 10:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Basin',
            fields=[
                ('basin_id', models.AutoField(primary_key=True, serialize=False)),
                ('basin_name', models.CharField(max_length=20, verbose_name='流域')),
            ],
            options={
                'verbose_name': '流域',
                'verbose_name_plural': '流域列表',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=50, verbose_name='城市')),
            ],
            options={
                'verbose_name': '城市',
                'verbose_name_plural': '城市列表',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('province_id', models.AutoField(primary_key=True, serialize=False)),
                ('province_name', models.CharField(max_length=50, verbose_name='省份')),
            ],
            options={
                'verbose_name': '省份',
                'verbose_name_plural': '省份列表',
            },
        ),
        migrations.CreateModel(
            name='River',
            fields=[
                ('river_id', models.AutoField(primary_key=True, serialize=False)),
                ('river_name', models.CharField(max_length=20, verbose_name='河流')),
                ('basin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.basin', verbose_name='所属流域')),
            ],
            options={
                'verbose_name': '河流',
                'verbose_name_plural': '河流列表',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=32, verbose_name='密码')),
                ('email', models.CharField(max_length=32, verbose_name='邮箱')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户列表',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('section_id', models.AutoField(primary_key=True, serialize=False)),
                ('section_name', models.CharField(max_length=50, verbose_name='断面名称')),
                ('basin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.basin', verbose_name='所属流域')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.city', verbose_name='所属地区')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.province', verbose_name='所属省份')),
                ('river', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.river', verbose_name='所属河流')),
            ],
            options={
                'verbose_name': '断面',
                'verbose_name_plural': '断面列表',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('monitoring_time', models.DateTimeField(null=True, verbose_name='检测时间')),
                ('water_type', models.CharField(max_length=30, null=True, verbose_name='水质类别')),
                ('water_temperature', models.FloatField(null=True, verbose_name='水温')),
                ('pH', models.FloatField(null=True, verbose_name='pH')),
                ('dissolved_oxygen', models.FloatField(null=True, verbose_name='溶解氧')),
                ('conductivity', models.FloatField(null=True, verbose_name='电导率')),
                ('turbidity', models.FloatField(null=True, verbose_name='浊度')),
                ('permanganate_index', models.FloatField(null=True, verbose_name='高锰酸钾指数')),
                ('ammonia_nitrogen', models.FloatField(null=True, verbose_name='氨氮')),
                ('total_phosphorus', models.FloatField(null=True, verbose_name='总磷')),
                ('total_nitrogen', models.FloatField(null=True, verbose_name='总氮')),
                ('chlorophyll_alpha', models.FloatField(null=True, verbose_name='叶绿素')),
                ('algal_density', models.FloatField(null=True, verbose_name='藻密度')),
                ('station_status', models.TextField(null=True, verbose_name='站点情况')),
                ('basin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.basin', verbose_name='流域')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.city', verbose_name='所在地区')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.province', verbose_name='省份')),
                ('river', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.river', verbose_name='所属河流')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.section', verbose_name='断面名称')),
            ],
            options={
                'verbose_name': '数据',
                'verbose_name_plural': '数据列表',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.province', verbose_name='省份'),
        ),
    ]
